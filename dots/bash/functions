function wakehubble() {
    # svalbard
    tunnel go starbase.in 10023 'wakeonlan '$HUBBLE
}

function tni() {
    ssh -i ~/.ssh/tni_id_rsa ftseng@$DARKINQUIRY
}

function pushhubble() {
    # push a local file to hubble
    # $1 = local file
    # $2 = remote path
    tunnel push ftseng@starbase.in 10022 ftseng $1 $2
}

function pushhubble() {
    # pull a local file from hubble
    # $1 = remote file
    tunnel pull ftseng@starbase.in 10022 ftseng $1
}

function hubble() {
    tunnel go starbase.in 10022
}

# Start an HTTP server from a directory, optionally specifying the port
function server() {
	local port="${1:-8000}"
		sleep 1 && firefox "http://localhost:${port}/" &
        # Set the default Content-Type to `text/plain` instead of `application/octet-stream`
        # And serve everything as UTF-8 (although not technically correct, this doesnâ€™t break anything for binary files)
		python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
}

# Activate a Python virtualenv by name.
# Assumes that envs are stored in ~/.env/.
function aa() {
    source ~/.env/$1/bin/activate
}

# easier archive extraction
function extract() {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xvjf $1     ;;
            *.tar.gz)    tar xvzf $1     ;;
            *.bz2)       bunzip2 $1      ;;
            *.rar)       unrar x $1      ;;
            *.gz)        gunzip $1       ;;
            *.tar)       tar xvf $1      ;;
            *.tbz2)      tar xvjf $1     ;;
            *.tgz)       tar xvzf $1     ;;
            *.zip)       unzip $1        ;;
            *.Z)         uncompress $1   ;;
            *.7z)        7z x $1         ;;
            *)           echo "'$1' cannot be extracted via >extract<" ;;
        esac
    else
        echo "'$1' is not a valid file!"
    fi
}
