#!/bin/bash
# normally, would just use acpi,
# but it doesn't work well for multiple batteries
# (e.g. thinkpads)

EWMA_ALPHA=0.05
BATS=/sys/class/power_supply/BAT*/

function query() {
    # query a numerical value for multiple batteries
    # and echo their sum
    result=$(cat $BATS/$1)
    echo "$result" | paste -sd+ | bc
}


if [[ $1 == 'mon' ]]; then
    while true; do
        battery_level=$(batt percent)
        if [ $battery_level -le 10 ] && [[ $(batt status) == "Discharging" ]]; then
            notify-send --urgency=critical "Battery low" "Battery level is ${battery_level}%!"
        fi
        sleep 120
    done

elif [[ $1 == 'status' ]]; then
    echo $(cat $BATS/status | grep -E "Discharging|Charging|Full")

else
    STATUS=$(batt status)
    if [[ $STATUS == "Full" ]]; then
        if [[ $1 == 'percent' ]]; then
            printf "100"

        elif [[ $1 == 'time' ]]; then
            printf "FULL"
        fi
    else
        POWER_NOW=$(query power_now)   # mW
        ENERGY_FULL=$(query energy_full) # mWh
        ENERGY_NOW=$(query energy_now)   # mWh
        if [ -f /tmp/power ]; then
            POWER_EWMA=$(cat /tmp/power)
            POWER_EWMA=$(echo "$EWMA_ALPHA * $POWER_NOW + (1-$EWMA_ALPHA) * $POWER_EWMA" | bc -l)
        else
            POWER_EWMA=$POWER_NOW
        fi
        POWER_EWMA=$(printf '%.0f\n' $POWER_EWMA)
        echo $POWER_EWMA > /tmp/power

        if [[ $1 == 'percent' ]]; then
            PERCENT=$(echo "$ENERGY_NOW/$ENERGY_FULL * 100" | bc -l)
            printf '%.0f\n' $PERCENT

        elif [[ $1 == 'time' ]]; then
            if [ "$POWER_EWMA" -eq "0" ]; then
                SECS=0
            elif [[ $STATUS == "Discharging" ]]; then
                SECS=$(echo "$ENERGY_NOW/$POWER_EWMA * 60 * 60" | bc -l)
            else
                SECS=$(echo "($ENERGY_FULL - $ENERGY_NOW)/$POWER_EWMA * 60 * 60" | bc -l)
            fi
            SECS=$(printf '%.0f' $SECS)
            printf '%02d:%02d\n' $(($SECS/3600)) $(($SECS%3600/60))
        fi
    fi
fi