#!/bin/bash
# for this to work w/o entering a sudo password,
# add the following after running `sudo visudo`
#   ftseng  ALL = NOPASSWD: /usr/bin/pkill
#   ftseng  ALL = NOPASSWD: /usr/sbin/openvpn
#   ftseng  ALL = NOPASSWD: /usr/sbin/service stunnel4 *

VPN_DIR=/home/ftseng/docs/vpn
ACTIVE=$(basename $(readlink $VPN_DIR/active))

if [[ $1 == 'up' ]]; then
    # kill all existing stunnel4 processes to avoid this error:
    # Error binding service [openvpn] to 127.0.0.1:1413
    # bind: Address already in use (98)
    # sudo killall stunnel4

    # to set active vpn server, symlink its folder, i.e.:
    # ln -s ~/docs/vpn/<server name> ~/docs/vpn/active
    cd $VPN_DIR/active

    sudo service stunnel4 restart
    stunnel4 airvpn.ssl # make sure this does not have `foreground = yes` in it
    sudo openvpn --config airvpn-ssl.ovpn --daemon
    notify-send "VPN active ($ACTIVE)"
elif [[ $1 == 'down' ]]; then
    sudo service stunnel4 stop
    sudo pkill openvpn
    sudo pkill stunnel4
    notify-send "VPN deactivated"
elif [[ $1 == 'switch' ]]; then
    CHOICE=$(find $VPN_DIR -mindepth 1 -type d -printf "%f\n" | dmenu)
    if [ -z "$CHOICE" ]; then
        exit
    fi
    rm -rf $VPN_DIR/active
    ln -s $VPN_DIR/$CHOICE $VPN_DIR/active
    notify-send "Active VPN is now $CHOICE"
elif [[ $1 == 'which' ]]; then
    notify-send "Active VPN is $ACTIVE"
else
    echo "Please specify 'up', 'down', or 'switch'."
    exit 0
fi